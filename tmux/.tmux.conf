#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Use Vi mode
set-window-option -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set-option -g default-terminal "tmux-256color"

#set-option -sa terminal-features ',xterm-kitty:RGB'
# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# Status line customisation
set-option -g status-left-length 100
set-option -g status-right-length 100
set-option -g status-left " #{session_name}  "
set-option -g status-right "#{pane_title} "
# set-option -g status-style "fg=#7C7D83 bg=#242631"
set -g status-style 'bg=#333333 fg=#5eacd3' # Gruvbox Material
set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "
set-option -g window-status-current-format "#{window_index}:#{pane_current_command}#{window_flags} "
set-option -g window-status-current-style "fg=#E9E9EA"
set-option -g window-status-activity-style none

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+a and remove Ctrl+b
set -g prefix C-a
unbind C-b

# Send prefix to a nested tmux session by doubling the prefix
bind C-a send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Copy like in vim
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Use cheatsheet
bind-key -r i run-shell "tmux neww tmux-cht.sh"

# Open a new pane with the name I want
bind-key -r o command-prompt -p "Window name: " "run-shell 'tmux-windowizer %1'"

# Go fast to specific directory
bind-key -r H run-shell "~/.local/bin/tmux-sessionizer /home/taloud/work/fff"
bind-key -r T run-shell "~/.local/bin/tmux-sessionizer /home/taloud/.dotfiles"
bind-key -r N run-shell "~/.local/bin/tmux-sessionizer /home/taloud/ansible"
bind-key -r S run-shell "~/.local/bin/tmux-sessionizer /home/taloud/.dotfiles"

bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Copy like in vim
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Use cheatsheet
bind-key -r i run-shell "tmux neww tmux-cht.sh"

# Open a new pane with the name I want
bind-key -r o command-prompt -p "Window name: " "run-shell 'tmux-windowizer %1'"

# Go fast to specific directory
bind-key -r H run-shell "~/.local/bin/tmux-sessionizer /home/taloud/work/fff"
bind-key -r T run-shell "~/.local/bin/tmux-sessionizer /home/taloud/.dotfiles"
bind-key -r N run-shell "~/.local/bin/tmux-sessionizer /home/taloud/ansible"
bind-key -r S run-shell "~/.local/bin/tmux-sessionizer /home/taloud/.dotfiles"
